[{"/Users/maximefleurant/space/github/cardappweb/src/index.tsx":"1","/Users/maximefleurant/space/github/cardappweb/src/reportWebVitals.ts":"2","/Users/maximefleurant/space/github/cardappweb/src/aws-exports.js":"3","/Users/maximefleurant/space/github/cardappweb/src/app/App.tsx":"4","/Users/maximefleurant/space/github/cardappweb/src/features/Card/index.tsx":"5","/Users/maximefleurant/space/github/cardappweb/src/features/CardList/index.tsx":"6"},{"size":611,"mtime":1610906197109,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1610655246264,"results":"9","hashOfConfig":"8"},{"size":692,"mtime":1610898326558,"results":"10","hashOfConfig":"8"},{"size":2032,"mtime":1610911982305,"results":"11","hashOfConfig":"8"},{"size":170,"mtime":1610910602997,"results":"12","hashOfConfig":"8"},{"size":1298,"mtime":1610939743399,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1he2ehe",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maximefleurant/space/github/cardappweb/src/index.tsx",[],["28","29","30","31"],"/Users/maximefleurant/space/github/cardappweb/src/reportWebVitals.ts",[],"/Users/maximefleurant/space/github/cardappweb/src/aws-exports.js",[],"/Users/maximefleurant/space/github/cardappweb/src/app/App.tsx",["32"],"import { FunctionComponent } from 'react';\nimport { withAuthenticator } from '@aws-amplify/ui-react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Amplify, { Auth } from 'aws-amplify';\nimport { AUTH_TYPE, createAuthLink } from 'aws-appsync-auth-link';\nimport { createSubscriptionHandshakeLink } from 'aws-appsync-subscription-link';\nimport { ApolloProvider, ApolloClient, ApolloLink, InMemoryCache } from '@apollo/client';\nimport appSyncConfig from '../aws-exports';\nimport Card from '../features/Card';\nimport CardList from '../features/CardList';\n\nAmplify.configure(appSyncConfig);\n\nconst url = appSyncConfig.aws_appsync_graphqlEndpoint;\nconst region = appSyncConfig.aws_appsync_region;\nconst auth = {\n  type: appSyncConfig.aws_appsync_authenticationType as AUTH_TYPE.AMAZON_COGNITO_USER_POOLS,\n  jwtToken: async () => (await Auth.currentSession()).getIdToken().getJwtToken(),\n};\n\nconst link = ApolloLink.from([\n  createAuthLink({ url, region, auth }),\n  createSubscriptionHandshakeLink({ url, region, auth }),\n]);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n});\n\nasync function signOut() {\n  try {\n    await Auth.signOut();\n    window.location.reload();\n  } catch (error) {\n    console.log('error signing out: ', error);\n  }\n}\n\nconst App: FunctionComponent = () => (\n  <ApolloProvider client={client}>\n    <Router>\n      <div className=\"grid grid-cols-12 gap-4 p-4 items-center\">\n        <div className=\"col-start-1 col-end-3 text-4xl font-semibold text-gray-800\">\n          <Link to=\"/\">CARDS</Link>\n        </div>\n        <div\n          className=\"col-start-12 col-end-13 text-2xl font-light text-gray-800 cursor-pointer text-right\"\n          onClick={signOut}\n        >\n          Signout\n        </div>\n      </div>\n      <Switch>\n        <Route path=\"/card\">\n          <Card />\n        </Route>\n        <Route path=\"/\">\n          <CardList />\n        </Route>\n      </Switch>\n    </Router>\n  </ApolloProvider>\n);\n\nexport default withAuthenticator(App);\n","/Users/maximefleurant/space/github/cardappweb/src/features/Card/index.tsx",[],"/Users/maximefleurant/space/github/cardappweb/src/features/CardList/index.tsx",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":36,"column":5,"nodeType":"43","messageId":"44","endLine":36,"endColumn":16},"lines-around-directive",["45"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]